# Visual Studio / .NET Core
## Ignore Visual Studio temporary files, build results, and generated files

# User-specific files
*.suo
*.user
*.userosscache
*.sln.docstates

# Build results
[Bb]in/
[Oo]bj/

# Visual Studio 2015 cache/options
.vs/
# Visual Studio 2017 cache/options
.vsconfig

# Rider
.idea/

# User-specific files (macOS)
.DS_Store

# Files generated by Visual Studio
*_i.c
*_p.c
*_h.h
*.ilk
*.meta
*.obj
*.pch
*.pdb
*.pgc
*.pgd
*.rsp
*.sbr
*.tlb
*.tli
*.tlh
*.tmp
*.tmp_proj
*.log
*.vspscc
*.vssscc
.builds

# NuGet Packages
*.nupkg
# The packages folder can be ignored because of Package Restore
**/packages/*
# except build/, which is used as an MSBuild target.
!**/packages/build/
# Uncomment if you don't want to check in NuGet packages:
#packages/
# NuGet v3's project.json lock file
project.lock.json
project.assets.json

# ReSharper
_ReSharper*/
*.[Rr]e[Ss]harper

# DotCover
*.dotCover

# Test Results
*.trx
*.coverlet.json

# Local secrets
secrets.json
appsettings.Development.json 
# Consider if appsettings.Development.json should be shared or if each dev has their own.
# If it contains sensitive data or machine-specific paths, it should be ignored.

# Environment files
.env

# EF Core migrations history
# If you are working in a team, you might want to commit the Migrations folder
# but exclude the __EFMigrationsHistory table entries if they are specific to local DBs.
# However, the Migrations folder itself is usually committed.

# BundleMinifier.Core output
bundleconfig.json.bindings

# node.js
node_modules/
npm-debug.log
yarn-error.log
